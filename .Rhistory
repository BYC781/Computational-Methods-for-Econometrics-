R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
idx <- exp(beta1*X1[,i] - beta2*X2[,i])
p <- idx / (1+idx)
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
idx <- exp(beta1*X1[,i] - beta2*X2[,i])
p <- idx / (1+idx)
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (i in 1:maxiter) {
g <- gradient(beta[1], beta[2])
H <- hessian(beta[1], beta[2])
if (max(abs(g)) < tol) {
break
}
beta <- beta - solve(H) %*% g
}
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
print(beta_seq[i,])
}
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
idx <- exp(beta1*X1[,i] - beta2*X2[,i])
p <- idx / (1+idx)
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
idx <- exp(beta1*X1[,i] - beta2*X2[,i])
p <- idx / (1+idx)
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (i in 1:maxiter) {
print(beta)
g <- gradient(beta[1], beta[2])
H <- hessian(beta[1], beta[2])
if (max(abs(g)) < tol) {
break
}
beta <- beta - solve(H) %*% g
}
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
print(beta_seq[i,])
}
H
g
gradient(-292.79640,26.62692)
idx <- exp(-292.79640*X1[,1] - 26.62692*X2[,1])
idx
p <- idx / (1+idx)
p
##### BHHH #####
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (i in 1:maxiter) {
print(beta)
g <- gradient(beta[1], beta[2])
H <- hessian(beta[1], beta[2])
if (max(abs(g)) < tol) {
break
}
beta <- beta - solve(H) %*% g
}
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
print(beta_seq[i,])
}
test <- c(1,2,3, NA)
test
##### BHHH #####
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (i in 1:maxiter) {
print(beta)
g <- na.omit(gradient(beta[1], beta[2]))
H <- hessian(beta[1], beta[2])
BHHH <- g %*% t(g)
if (max(abs(g)) < tol) {
break
}
beta <- beta + solve(BHHH) %*% g
}
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
print(beta_seq[i,])
}
##### BHHH #####
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (i in 1:maxiter) {
print(beta)
g <- na.omit(gradient(beta[1], beta[2]))
H <- na.omit(hessian(beta[1], beta[2]))
BHHH <- g %*% t(g)
if (max(abs(g)) < tol) {
break
}
beta <- beta - solve(H) %*% g
}
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
print(beta_seq[i,])
}
warnings()
View(H)
View(g)
beta_seq
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (i in 1:maxiter) {
print(beta)
g <- na.omit(gradient(beta[1], beta[2]))
H <- na.omit(hessian(beta[1], beta[2]))
BHHH <- g %*% t(g)
if (max(abs(g)) < tol) {
break
}
beta <- beta - solve(H) %*% g
}
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
print(beta_seq[i,])
}
View(beta_seq)
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (i in 1:maxiter) {
print(beta)
g <- na.omit(gradient(beta[1], beta[2]))
H <- na.omit(hessian(beta[1], beta[2]))
BHHH <- g %*% t(g)
if (max(abs(g)) < tol) {
break
}
beta <- beta - solve(H) %*% g
}
print(i)
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
}
##### BHHH #####
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (i in 1:maxiter) {
g <- na.omit(gradient(beta[1], beta[2]))
H <- na.omit(hessian(beta[1], beta[2]))
BHHH <- g %*% t(g)
if (max(abs(g)) < tol) {
break
}
beta <- beta - solve(H) %*% g
}
print(i)
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
}
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / (1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (j in 1:maxiter) {
g <- na.omit(gradient(beta[1], beta[2]))
H <- na.omit(hessian(beta[1], beta[2]))
BHHH <- g %*% t(g)
if (max(abs(g)) < tol) {
break
}
beta <- beta - solve(H) %*% g
}
print(i)
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
}
##### BHHH #####
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / 10000*(1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) / 10000*(1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (j in 1:maxiter) {
g <- na.omit(gradient(beta[1], beta[2]))
H <- na.omit(hessian(beta[1], beta[2]))
BHHH <- g %*% t(g)
if (max(abs(g)) < tol) {
break
}
beta <- beta - solve(H) %*% g
}
print(i)
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
}
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) /(1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- 10000*exp(beta1*X1[,i] - beta2*X2[,i]) /(1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (j in 1:maxiter) {
g <- gradient(beta[1], beta[2])
H <- na.omit(hessian(beta[1], beta[2]))
BHHH <- g %*% t(g)
if (max(abs(g)) < tol) {
break
}
beta <- beta + solve(BHHH) %*% g
}
print(i)
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
}
BHHH
g
##### BHHH #####
## R=100, N=400
R=100;N=400
X1 <- matrix(rnorm(R*N, 0, 1), nrow=N)
X2 <- matrix(rchisq(R*N, 1), nrow=N)
U1 <- matrix(rgumbel(R*N), nrow=N)
U2 <- matrix(rgumbel(R*N), nrow=N)
Y <- matrix(0, nrow=N, ncol=R)
Y <- as.matrix((X1 + U1) > (X2 + U2))
Y <- ifelse(Y, 1, 0)
beta_seq <- matrix(0, nrow=R, ncol=2)
for (i in 1:R){
gradient <- function(beta1, beta2) {
p <- exp(beta1*X1[,i] - beta2*X2[,i]) /(1+exp(beta1*X1[,i] - beta2*X2[,i]))
g1 <- sum(Y[,i]*X1[,i] - X1[,i]*p)
g2 <- sum(Y[,i]*X2[,i] - X2[,i]*p)
return(matrix(c(g1, g2), ncol=1))
}
hessian <- function(beta1, beta2) {
p <- exp(beta1*X1[,i] - beta2*X2[,i]) /(1+exp(beta1*X1[,i] - beta2*X2[,i]))
H11 <- sum(x1^2*p*(1-p))
H12 <- sum(x1*x2*p*(1-p))
H22 <- sum(x2^2*p*(1-p))
return(matrix(c(H11, H12, H12, H22), ncol=2))
}
beta <- c(0, 0)
tol <- 1e-6
maxiter <- 100
for (j in 1:maxiter) {
g <- gradient(beta[1], beta[2])
H <- hessian(beta[1], beta[2])
BHHH <- g %*% t(g)
if (max(abs(g)) < tol) {
break
}
beta <- beta + solve(BHHH) %*% g
}
print(i)
beta_seq[i, 1] <- beta[1]
beta_seq[i, 2] <- beta[2]
}
g
BHHH
solve(BHHH)
det(BHHH)
summary(blk_wm_midwest_logit)$coefficients
